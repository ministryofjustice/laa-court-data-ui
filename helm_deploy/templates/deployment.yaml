apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "laa-court-data-ui.fullName" . }}-web
  namespace: {{ .Values.namespace }}
  labels:
    {{- include "laa-court-data-ui.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas.web }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 100%
  selector:
    matchLabels:
      app: {{ include "laa-court-data-ui.fullName" . }}-web
  template:
    metadata:
      labels:
        app: {{ include "laa-court-data-ui.fullName" . }}-web
    spec:
      containers:
        - name: laa-court-data-ui-app
          imagePullPolicy: Always
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          ports:
            - containerPort: 3000
          readinessProbe:
            httpGet:
              path: /ping.json
              port: 3000
              httpHeaders:
                - name: X-Forwarded-Proto
                  value: https
                - name: X-Forwarded-Ssl
                  value: "on"
            initialDelaySeconds: 15
            periodSeconds: 10
          livenessProbe:
            httpGet:
              path: /ping.json
              port: 3000
              httpHeaders:
                - name: X-Forwarded-Proto
                  value: https
                - name: X-Forwarded-Ssl
                  value: "on"
            initialDelaySeconds: 30
            periodSeconds: 10
          env:
            - name: ENV
              value: {{ .Values.env }}
            - name: RACK_ENV
              value: 'production'
            - name: RAILS_ENV
              value: 'production'
            - name: DOMAIN_URL
              value: "https://{{ .Values.host }}"
            - name: COURT_DATA_ADAPTOR_API_URL
              value: {{ .Values.cdaHost }}
            - name: RAILS_SERVE_STATIC_FILES
              value: enabled
            - name: GA_TRACKING_ID
              value: {{ .Values.googleAnalyticsId }}
            - name: RAILS_LOG_TO_STDOUT
              value: enabled
            - name: DISPLAY_RAW_RESPONSES
              value: "{{ .Values.displayRawResponses }}"
            - name: SHOW_APPEALS
              value: "{{ .Values.featureFlags.showAppeals }}"
            - name: MAINTENANCE_MODE
              value: "{{ .Values.featureFlags.maintenanceMode }}"
            - name: COURT_DATA_ADAPTOR_API_UID
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: COURT_DATA_ADAPTOR_API_UID
            - name: COURT_DATA_ADAPTOR_API_SECRET
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: COURT_DATA_ADAPTOR_API_SECRET
            - name: SECRET_KEY_BASE
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: SECRET_KEY_BASE
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: lcdui-rds
                  key: url
            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: lcdui-elasticache
                  key: primary_endpoint_address
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: lcdui-elasticache
                  key: auth_token
            - name: ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: ADMIN_PASSWORD
            - name: CASEWORKER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: CASEWORKER_PASSWORD
            - name: MANAGER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: MANAGER_PASSWORD
            - name: GOVUK_NOTIFY_API_KEY
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: GOVUK_NOTIFY_API_KEY
            - name: SENTRY_DSN
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: SENTRY_DSN
            - name: SLACK_ALERTS_WEBHOOK
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: SLACK_ALERTS_WEBHOOK
            - name: COURT_DATA_API_URL
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: COURT_DATA_API_URL
            - name: COURT_DATA_API_USERNAME
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: COURT_DATA_API_USERNAME
            - name: COURT_DATA_API_SECRET
              valueFrom:
                secretKeyRef:
                  name: aws-secrets
                  key: COURT_DATA_API_SECRET
        - name: laa-court-data-ui-metrics
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: Always
          command: ['sh', '-c', "bundle exec prometheus_exporter --bind 0.0.0.0"]
          ports:
          - containerPort: 9394
          livenessProbe:
            httpGet:
              path: /metrics
              port: 9394
            initialDelaySeconds: 10
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /metrics
              port: 9394
            initialDelaySeconds: 10
            periodSeconds: 60
